<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAdQAAAA8CAMAAADombsFAAAABGdBTUEAALGPC/xhBQAAAwBQTFRF////
        ICAg9vb1///+/9Br5+fmyMjI/7wszs7OAAAA/Pz8+/v60dHRhISE/v7+jIyM+fn5/9R48vLy4uLh9PT0
        w8PC6+rq1tbVtbW12trZvLy86enp9/f37+/u/+vB+rgs3t7c/Pv7urq65OTk39/fsrKyvr69/rss0tLS
        3Nzc7Ozs5eXlAwMDFxcX7u3t//LSx8fHwMDA/+q9/Lose3t7zc3M97csxcXE8PDwy8vL/8E7058w7bAt
        2NjXgICA29nVxsbGuLi3/85kEBAQ/+3FJiYmsK+ulpaW/9N08LIs6a0s0tDL9LQsl5KF/8pa3qYvcnJy
        //z2ysjE/9Z+ysrJoqKh46ktw5Qv2aQzkIyDo4I5qoMv/+So/8NBxsS9HR0dnX8+//fj5qwunnwyv5M0
        wb63q6ie//vxs4w3k4x7zszHr4gytbKqq6qlsa6m/8ZL/74z2qMtoZyQ2NbSkpKR/70viHRIvbmxbm5t
        rKyr5uXj/+Kh//PYyZoz//jnlHk8wsC81NTUuY4xmpeQjYVyg24/k35Ql4Ra//XexpYveGlHoJV+vry2
        hndV0c/JOzs7oYVHQEBANTU1fW5MtIovh4N4mpB5zZotdnJpf2cyop+YgX1yp6emvJVAs44+t7WwdWRA
        h4eGn5yVmItvrJZmLy8vzp0yknpGs5JJr6yi/96Us4QekI+M1NPP//78ZGNhp5p7hHxpsKiX//DOvZAt
        m5aJr6KG/+expqKYDAwMtq2YqKCOpJVzVVVVdW5cn4tff3dlqKWenZ2bTExMkHIwnodVmZmYf3RZyse+
        urar//nso5FpxJg5/8hSuJA6i3M8jX5bsZ5zjYh71adG3a9LpoEvwZpHYFU7mHk2jYFo/+/Lt5xkvbWk
        ZGBWqoY6bGRRo5qHcV820KE7Y1xJ4eDerYtCal5C/9+asqaNh4WAV087/+zCdGlQlYZk/+i1eHdzbGto
        /9Fu/9qJT0k8po5aEhIS8MFb6bVF+Ls2/9iDbmlcw7CF/+Ce6rtW48SB/PDWeJW+lAAAEvdJREFUeF7t
        nQlcE9e+gOfGhoFJDJhAFhMML4kJAV9KxIQooZDWi5dNrpQdpVQQ2SugUGwRZC2bl1fcEUGgoH3iQsVa
        tW5117qvdV9rW3vb3vbeLve+d9+ZmRMggYLBtC81/X6tzJz5c5yeL/M/Z86cSRHb33nmQGwRVWPhzeVr
        Pruyomgjdn97eaokLZ7bokZju1k0hEAzPoLDIDf1pFVECVF11KooNTqAH+qP8WHYMw6VCjcsCyBVszI9
        8BZnUrn3qh4erbspMmW5D6W2rjD7SPHqLAEZ5cY9TIeCIYLmrSuEKBoZVwX+NGTBtWRnGPWsY7lSN3RG
        H9ro9/mKqG/ZGHVPktB7d/F9ZvyJvJjklqKQINIlFv5VBAsjNiEOXpcTA1DhikRvTygT8sP5z5gw5pnH
        cqUeKoxdHbEvsaquwMGNktbeUZ0b0nLOJ01aeqZQnZAjhoEKHdfIlUtbejDqmb0qLhjqJJh3aScPBjz7
        WK7UyPQyp6/Tq8qzKLa7dkiKl/XEF6lP3uYzpBWhwXeySpvdiO6UQV3zuhPMxiS0tDJgFQ1Yui0ACgUs
        uFCzEB63AixXauhKp42XhavOsSmNsQfL0hw4NSmehW1j2awNe8q/6vp8/U4WGcrwidC5kZsQ+Y2DkTJZ
        6MVtvaOlHy6USeBBa8BypX53uKC6JGkPi+l/WS28UqoQzPnOuz4/Z0+Or7w2c3fS7LVtPmQsxolYQ162
        epghiYEoGngwMVBGOF1w/p8e8JBVYMEDpYg9JSVnmjFafGV0dGXmsR75nHvJtZXRTbfdBLWHIlFhx5ks
        8uQZzhGTlBRik4TBSy3SoqgwailwC/j+KscBHrIKLFeq4qOL2ZfjNSxXl4x91ckb6tfvui/g1ayQBT70
        8ZGsflgSjM5ef13fm7oWTIZbJJLGVd5CNDA9DvSrC77fbQOLrQTLldp6JzthJSZYVn4uiJXW/GX07NM9
        7s4b8kqaQsK2ZvDlW06q0ciEfbA3FUy2nw/7WEhyUTYYLcUdzPb8/p9OsMxasFypedviUnmKY6cDUpaL
        BfEVWs+W+B3JLjZXd+5oT08oc7VNPR2qjm6E8UCrLkLSv2Ol5uTNBj3qirjovUv6p2ZrwHKlZi9tUDEk
        y5PQqN3Nrjz/W53LXBrWdjvkalYWBgeWF8vFGRWxZ21hPEAjGm8gz3n1nW1CNDi92s9gdsIasFypgQ+5
        DESTfGRp59GYL7sXsuKzzhZqExrdmDktSUu3Op2LdwyLgRNLJBR/HdyC1FaskEU+CLE6pxYsNTZGQN1f
        6uu+JVna4J24dbEgv6Ij4EFWcTEzqKYs8+qVon22RnO5Hly4AdFk1EUd3CWHeyaD2UEm/P2d1xf3LxlL
        HNdDx4v84A6MOQz3PiL2JoAt/e+CoZ1xNU9SrUkYSz0+ZhZxF/ArM2vMcXgCJEBqCEew4cHa7Wy2a9s2
        WWS1LoxtU5lYI9qb1+MSFBaTqNUmRMBgPf5eRp0npvu8UQO3TUff1gQT5vcrMWz9SXjRn+EOjPk7m9x7
        CqmG1ZqEsdQ/wVb+1fkTPAESINUNyz00W1vUw+InN9xM+Czj6nVKWivnqrc6vZFC2d/pnd4WDoNJGI5/
        9hmQaRWGQ2LT4HPt7F564YUXJm3+T9C+4G9j2L8OSuztDSv9I7Bm94p+kEbE2NltJvf87T8AZuyJ8tGg
        eLQ9OEXjap6kWpMwljoFtvGvzhR4AiRAKkI7Wr1Cnee7I1/hUtMTcSI9dmuYY3xDh/busvu2zNoT39IN
        JxT4uvmGj+GeHhs7uz8QG45v29l9aFDSB0iTb/9X/0QJYgD6W2PweaCTW46g1JHcNK7mSao1AWOpsIn/
        H4AnQAKkyuPvd7XVhyzJK0pl+bD3pASj0WePOhxtv7l9/5aHMbkcPyOFBf4j7j1/jr621oFLCf85SOuD
        NGk/rX+iJKW+DbPGSKUOqNYELFdqzKGdiq7aDde8g+Ny3BTNFVVqYUfnDvf8xq7UuwFNjwxnexFEPkls
        9mFuX1szgRB8nmOQ1gdpUsLvnyhBzAQQPo3cG6nUAdWagOVKbYmMvUXHdHVVgQnHatOci9uShLKAmyFB
        2P1b0bKlyw1XpjAkB0Rw04z0a2vQNeLPeQa2Pp4mEQQkyt5HBnjMh+DKJsdKI5Q6sFoTsFypccLQOq9c
        x6D22NvSupbG8MkrY7VocH2mgJnxXdIZoyfeijUFv8C6BkOpeHYf2Pp4mkSQ/okSj6G+pB8rjVDqwGpN
        wHKlVpbEtmZcjeF4taq2VnmeXEZbfSoYLdydf66U05w6xyjVFqxxh1vmpK+tHYAQ/Mob2PogTQLb/RMl
        EQN0kBfZCKUOrNYELFdqWGpPxonClLZcLL6uStsUk9YQ4KmtXnwuaX33QoHhDSmNN2nkt6ND0NfWTj83
        UCLTpEGiJGIwMF5+B//kjUzqINWagOVKLRY7L4tTC6u7qJr8vacf7d9yEg1dH5J/WhiZUAqj9Lj660Yy
        nhiW3ramgMYd/JYGpMl1+M/DfYmSjJkMBkv4WGlkUgep1gQsV+ouFpbW7n33nO+9c3JViO/Kk8HqhO7W
        9g7U+5oXjIJg851+kQsVb+uX7O3t1339CvBB3DEOaH0yTSIIuy9RwpivybHSyKQOUq0JWK7UY5k6Se2e
        1A1nky5tvy9wuaX1jPpJfCRaqK4/yvTy6TfxQBFtJHpYQX4a3mZmvLEBba1nwkZ9iUHrgzT5wQsEQB6c
        b4AxGlACxkojkjpYtSYwnNQxCPIuis6bgbwKdqZsQqbjP/46d+7E18ChcSj6IvL8y8hEFJ1KTDCCaGTG
        1I/R6chbvWFDhBtA/v0QPP3eS0hdwtTErBXO7swUiPc3XDmTuT0OVa9dTRNVbumCgaBD9TtALCpjll1q
        X0Jha1Qas6ViKLV3Qn9g64M02QdMlPqYNaDIY2RSB6vWBJ5A6vMo+hxCSP0RQd5A0QVvIu+NG7VoyqBS
        F82cihyfh0vVhw0RbgA8ARIgta4kOKVRgWTtjUzaUrys1YWT47/jplZYWEPNrcsuqdav0kd8ImyIi5OV
        GhtV/lNqxIfzncx1d2Pc1gNLQJrsAx7pjQEd8TvYiKQOVq0JDC9106hZ6MxNhNRPRs09vgAYBprfR14e
        VCooehN5DpeqDxsi3AB4AiRAamV04M1l0v1y6eMj9LKqtY8cqc2HQmXe7Wk+20/JZJH1OV2ES2ydDdTL
        29J08eCqy6XKAnM9Fh9WKkiTf4SbyDvEnD+gN8YHHyuNROqg1ZrA8FI/QX5Ej3+CS5016s2/Ii+in+KX
        65TXBr9Sx6GzFiHTcan6sCHCDYAnQAKkZh1pWd7aVtG9UBE0JwEMeWMWHglFhXm+lJiT+Crt0PIy/KmG
        wmmaPtvSuho/X3owsTM1c926yWZZwTKUVCd/HpEmXyB3EWS0PlH2xYDDL30wtFSimieq1gSGlzpz0RfT
        kXdxqX9D3ngZeR+difeyxCECQ6k4U4k+VR82RLgB5GEIkOrLbuWs7AhN3McSZJV7J53NeJSOai/lOMaX
        E4t54xIvPg6iMbjj++aWaE7frkpUByTtzp3s32+dy8gZSupf7EYTadKV3AWJQn+oL4byByJ/DiWVqOaJ
        qjWB4aW+/8aMNzZNx6U+jzz3GjJ33rv4pTdvyrwxyKszZ040krpo5qffoIRUfdgQ4QbAEyABUrdQnV0a
        ItWFN5iZC8Mrz3SFNAXKTj2SzPnOGwQLI1eFBjxWMNijJf1SLUbfGqtF1VUtyyImzTfDtTqc1P5psi9R
        9vst7oikDl6tCQwvdeJ0ZNPUj4HU18iIb75B3sM7yb/p8yn4B+9IXySiQREAl6oPGyLcALJ2CJB6ulks
        z2woOpG5vbObGVTb1RIsi/zyPqusEH9J0TuuZPalZMx9jeE0Pq2rJ89biAovbfd9+tcsBnl2TTw2H03w
        it3oaR/Z2f3FnrifBOM0ezAu+she/1vjydIPe6X2e0huVM0TVWsSw0sdhx5HfsSv1HeRt2bOfA9cZ28i
        n4wbNXeW3tK8V5FxXyCvLoDROLhUfdgQ4QbAEyABUmuKU7PYLjvic5qyY8tyl+z1ls3eG+YYE0e8ongx
        SvvgOl8zvgB+9HsRzDmTEohqUxp28J/2zmbgKhN9CcloMAYCwIVRY4mdCfoYYv4JQcSgSyWl6n+333IW
        ktFPVK1JPInUmaNm4VLfQsag6MfIjCmzJs7Ab0b1ltDXxs2d8QW4ITWSCsP0PwcJNwCeAAmQGr51adE+
        Fd/9cSH+ampNklC7Ppl/7DTxKpss0NP7qjODW2C4AoQgd9eDABkasH6XLywYKfq2fhqpiD3Ytjipvx7w
        BEiA1P1X1IE3S93YYYeSGnxDTgWjKTsXNu/tIF95kkWfUGHU0YZvu5Fg/P3VKVo0MOVMhNW8ZWyE5UpN
        ro5K37J6R7Pz0ZCco53BnrP3OTJvgA6TQLs+n8bj/txzcd/tTUI0MHbzxjCrei+qF8uVSsk9eytoZWz5
        1jRN7bUONPpaLWvXFfw6BZ2qLPa6QjDN7+em8Wm+IS1Ra3fK/TeOZN3Abx/LlbrMh5OReUeNJrby90Wr
        1Qlz3ErrQ0FcwIql6uitFJqNvX6icDByTzwOYjB1N/yNR1LWgOVKLalxcayt6+io278zDhWW9FDYN0rw
        V8OXxnl3nA1j0CP0X/swKA6qdRvFDOrmlQPXAj/7PK3U58wGPAESILWqJt6FXftly+ruBwHCu8upCM2v
        siQAnX0nVFuxxMGlwGMYW+xpkyJCrpza/7tUC5Jal3vuYZmPq0dzZbQsuj0euKGlLV+bffFi8NrVCDLf
        ZtgZI4Zq3Z7yonNW8oVY/bFcqTvyE4Qnt7MdwioC0bwwQiEmibl8MDvpNt+RfuAJLkAGhx50jPxN68JY
        qqmvXUAjT8+Ad2myrkWjSbtrWS6Z9zpDemeHavemtHcxlCKjJaI/B80Kk+9AqQPm2YeBEPKP83fPn79w
        4cI/8J3/uUCUmcq/wHUIXxUDAKlHZnuqO4/GHMnxZcW7wGIEYdZ+Laex7SXmfm3mmcJYqqmvMhJCzv83
        BLd6dxtRZhpj3piLUES9z5twqafQ4LU5xdWhKaliisH1hrH9f4HV+M8SxlJHBGc8gAv+xQclrkpnPn4H
        qWBTmDRHioKNIRQmk+oA+jg2H0METI0G0bhTGI5MZz643mhUpiOFgTDdHSkiDsKEM3tAaoDwZE1a2zZZ
        6GP46EqPQDp+mIkimhX2o/0xi1Qx8DmWGT6e+JpAjk6q82IicpFIaaNxVXqJbGk8qZ/Ig0JzHStVCahK
        kUruNFapcZWCQxjFhqsc68MQS3VObKVcIYJfeAWkyrzbl/D3t6TXrzbqF5XjB5nGh9AQifx+xvWMNdZ4
        e9qLWaSygVQpjaYU4dM3HC5PPJaukdqynaQKDyVbzuUv5vLFIh+WSOwm5Ui44WwnJVXs6CdVyHV8no4l
        H+/qLLXlizVOXkr9MhQgVVjum5O8kNe2q69DxcE064wfqmGYQgN8OjrY2qyZNH9zXlNK1Prb5vjv+q1i
        FqkakHq9MISmWgzyoqsSwxYr5VI3RKJ0s1FhTJGYo0QEXrYcHd1VSueBA2Kll5jmp0IUY+UqFYI5ceQi
        ZwShKLm9XzIIpFb0BOU9eETJNVLIkhp2qBjPN6w0ZI6E67/xq8OfHfBS5hd5oqj2dJoVX6pmkQp6ufGg
        46M5O9FpyGKRM8XDgyqSONDBlRpOU4jcOVJMoKTzuBJniUIuVTCcNRyuODwcYYtYdCVFI+KIQTSFqbQN
        V/b1qfFZ17y1iSFGk/a0NZP7lzDYK7/86bPPL99bGTHNiyMR/AeGhNWrUVR4MgRGWCNmkcrg6ZQSCkUS
        7uEhAOlXqdS5Y5O5Xjqlwi+c5qxzXzwWl6pRetGdWBKpgubhpxJRcak6sZtI6sR1pdmKnDzYSp6jCK7u
        BFKxjLwV2vo5hrP2GH0+GFVBMJqkK/Pbhzdeby214YNPA3mAdSISjMqrllvxYMksUgFsuS2dzcG/A4ct
        l092B8l0MV3CooipmIDnyJYwaBI+oqGHyx00cgHiRlfxGWIxQpFrEKqKJ6cyaLxwCQ3cp7J55A0okIpg
        QXsTbxs95+YV9Ft75DO/u/Jeq07CNLya9+HfdBZZ+bQLH37DmEsq34vHUbDk5urIcKmIIGy1Au5DqNy+
        hXU0yeYl/7sg6rrx7Q1lZxK4UmV3WEbDKSvCXFIFbEzMExv0d08DIXUAjAOqvsejAp3/v59DQ1ONP0eM
        Y2vBSEndlAX3rRBzSQUIbFU8c3VkQOrAR+AUn8P9ZgexaR6vAqln4deob5pB/kSQsPX44rSUbutcyoJj
        RqmIo8ZstxFAqs0AKSqpwTS+PX3GpQDhoVxyb9G/Pl20idhyblAHJIVmbxlsVZp1YE6pZgRInXbA6NQ0
        B/T/lyECB6f5zkeWeiZ0kX3n1OkfTyQvVv7uqkM1FdlHrHEhC4nlSv2dZwxb2/8DVI+WAUHfOAEAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>